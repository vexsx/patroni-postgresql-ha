scope: postgres
namespace: /db/
name: node{{ etcd_suffix }}
restapi:
  listen: {{ hostvars[inventory_hostname]['private_ip'] }}:8008
  connect_address: {{ hostvars[inventory_hostname]['private_ip'] }}:8008
etcd:
        hosts: "{% for host in groups['psql'] %}{{ hostvars[host]['private_ip'] }}:2379{% if not loop.last %},{% endif %}{% endfor %}"
bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576 
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        max_connections: 100
        shared_buffers: '256MB'
        effective_cache_size: '768MB'
        wal_level: replica
        wal_keep_size: '1GB'
        max_wal_senders: 10
        hot_standby: 'on'
  initdb:
    - encoding: UTF8
    - data-checksums
  pg_hba:
    - host replication replicator   127.0.0.1/32 md5
    # Managed by Ansible
  {% for host in groups['psql'] %}
  - host replication replicator {{ hostvars[host]['private_ip'] }}/0 md5
  {% endfor %}
  - host all all   0.0.0.0/0   md5
  users:
    admin:
       password: admin
       options:
       - createrole
       - createdb
postgresql:
   listen: {{ hostvars[inventory_hostname]['private_ip'] }}:5432
   connect_address: {{ hostvars[inventory_hostname]['private_ip'] }}:5432
   data_dir:     /data/patroni
   pgpass:     /tmp/pgpass
   authentication:
    replication:
      username:   {{ psql_replicator_username }}
      password:     "{{ psql_replicator_passwords }}"
    superuser:
      username:   postgres
      password:     "{{ psql_superuser_passwords }}"
      parameters:
      unix_socket_directories:  '.'
tags:
   nofailover:   false
   noloadbalance:   false
   clonefrom:   false
   nosync:   false
